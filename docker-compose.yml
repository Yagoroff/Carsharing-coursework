version: "3.9"

services:
  db:
    image: postgres:latest
    volumes:
      - app-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET}

      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DSN: ${POSTGRES_DSN}
    networks:
      - default

  frontend:
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        NEXT_PUBLIC_BACKEND_URL: ${VITE_API_URL}
    ports:
      - "80:3000"
    environment:
      VITE_API_URL: ${VITE_API_URL}
      NEXT_PUBLIC_BACKEND_URL: ${VITE_API_URL}
    networks:
      - default

volumes:
  app-db-data: